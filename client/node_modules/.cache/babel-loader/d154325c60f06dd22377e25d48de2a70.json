{"ast":null,"code":"var _jsxFileName = \"/Users/brad/Desktop/react/react-book-search/client/src/components/Books/Search.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: ''\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.searchFunction(this.state.text); // this.setState({ text: '' });\n    };\n\n    this.onChange = event => this.setState({\n      text: event.target.value\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          clearFunction = _this$props.clearFunction,\n          showClear = _this$props.showClear;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Search for a title here\",\n      value: this.state.text,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"search\",\n      className: \"btn btn-dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), showClear && React.createElement(\"button\", {\n      className: \"btn btn-light btn-block\",\n      onClick: clearFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Clear\"));\n  }\n\n}\n\nSearch.propTypes = {\n  searchFunction: PropTypes.func.isRequired,\n  clearFunction: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/brad/Desktop/react/react-book-search/client/src/components/Books/Search.js"],"names":["React","Component","PropTypes","Search","state","text","onSubmit","event","preventDefault","props","searchFunction","onChange","setState","target","value","render","clearFunction","showClear","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACNC,MAAAA,IAAI,EAAE;AADA,KADqB;;AAAA,SAW7BC,QAX6B,GAWlBC,KAAK,IAAI;AAClBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,KAAL,CAAWC,cAAX,CAA0B,KAAKN,KAAL,CAAWC,IAArC,EAFkB,CAGlB;AACD,KAf4B;;AAAA,SAkB7BM,QAlB6B,GAkBlBJ,KAAK,IAAI,KAAKK,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAEE,KAAK,CAACM,MAAN,CAAaC;AAArB,KAAd,CAlBS;AAAA;;AAoB7BC,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKN,KADnC;AAAA,UACCO,aADD,eACCA,aADD;AAAA,UACgBC,SADhB,eACgBA,SADhB;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKX,QAArB;AAA+B,MAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,yBAHd;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKM,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,EAeGM,SAAS,IACR;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAA4C,MAAA,OAAO,EAAED,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBJ,CADF;AAuBD;;AA9C4B;;AAAzBb,M,CAKGe,S,GAAY;AACjBR,EAAAA,cAAc,EAAER,SAAS,CAACiB,IAAV,CAAeC,UADd;AAEjBJ,EAAAA,aAAa,EAAEd,SAAS,CAACiB,IAAV,CAAeC;AAFb,C;AA4CrB,eAAejB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Search extends Component {\n  state = {\n    text: ''\n  };\n\n  static propTypes = {\n    searchFunction: PropTypes.func.isRequired,\n    clearFunction: PropTypes.func.isRequired\n  };\n\n  //Method to pass this.state.text to axios through prop method searchFunction\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.searchFunction(this.state.text);\n    // this.setState({ text: '' });\n  };\n\n  //Method to change state setting 'text' equal to user input\n  onChange = event => this.setState({ text: event.target.value });\n\n  render() {\n    const { clearFunction, showClear } = this.props;\n\n    return (\n      <div>\n        <form onSubmit={this.onSubmit} className='form'>\n          <input\n            type='text'\n            name='text'\n            placeholder='Search for a title here'\n            value={this.state.text}\n            onChange={this.onChange}\n          />\n          <input\n            type='submit'\n            value='search'\n            className='btn btn-dark btn-block'\n          />\n        </form>\n        {showClear && (\n          <button className='btn btn-light btn-block' onClick={clearFunction}>\n            Clear\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}